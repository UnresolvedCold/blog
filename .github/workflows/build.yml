name: Build

on:
  workflow_call:
    inputs:
      deploy_site:
        required: false
        type: boolean
        default: false
        description: Will deploy the site to firebase if true
      force_build:
        required: false
        type: boolean
        default: false
        description: If true will run the build and create the artifacts
      branch: 
        required: false
        type: string
        description: if provided will checkout this branch for all the process


jobs:
  evaluate-changes: 
    runs-on: ubuntu-latest
    outputs: 
      new-blogs: ${{ steps.new-blogs.outputs.newblogs }}
      raw-new-blogs: ${{ steps.new-blogs.outputs.rawnewblogs }}
      enable-deploy: ${{ steps.enable-deploy.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Checkout ${{ inputs.branch }}
        if: inputs.branch
        run: |
          git checkout ${{ inputs.branch }} 
          git branch   
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v37
        with:
          files: |
            src/content/blog/**.mdx
      - name: Track deployable files
        id: enable-deploy
        uses: tj-actions/changed-files@v34
        with:
          files: |
            *
          files_ignore: |
            .devcontainer/*
            .github/*
            .vscode/*
            **/*.sh
      - name: List of new blogs
        id: new-blogs
        run: |
          newblogs=()
          rawnewblogs=()
          for file in ${{ steps.changed-files.outputs.added_files }}; do
            isDraft=$(grep -E '^---$' -A 1000 $file | sed '/^---$/d' | awk '/draft:/ {print $2}')
            echo isDraft: $isDraft
            if [[ "$isDraft" != "true" ]]; then
              rawnewblogs+=($file)
              newblogs+=(https://shubham.codes${file:11:-4})
            fi
          done
          newblogs=$(jq --compact-output --null-input '$ARGS.positional' --args -- "${newblogs[@]}")
          # rawnewblogs=$(jq --compact-output --null-input '$ARGS.positional' --args -- "${rawnewblogs[@]}")
          echo "newblogs=${newblogs}"
          echo "rawnewblogs=${rawnewblogs}"
          echo "newblogs=${newblogs}" >> $GITHUB_OUTPUT
          echo "rawnewblogs=${rawnewblogs[@]}" >> $GITHUB_OUTPUT
  build:
    runs-on: ubuntu-latest
    needs: evaluate-changes
    if: (needs.evaluate-changes.outputs.enable-deploy == 'true' || inputs.force_build) && always()
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Checkout input branch  - ${{ inputs.branch }}
      if: inputs.branch
      run: |
        git checkout ${{ inputs.branch }} 
        git branch 
    - name: Use Node.js 16
      uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'npm'
    - run: npm ci
    - name: Update pubDate
      run: |
        # Add pubDate after ideaDate to blog
        for file in ${{ needs.evaluate-changes.outputs.raw-new-blogs }}; do
          sed -i "/^ideaDate:.*/a pubDate: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" ./$file
        done
        sleep 5
        git status
    - name: Commit changes to publish branch
      if: |
        inputs.deploy_site
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Processed Publish [skip ci]
        branch: publish
        file_pattern: 'src/pages/posts/**/*.mdx'
        commit_user_name: Publish Bot
    - run: |
        rm -rf dist
        npm run build --if-present
    - name: Archive Dist
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist
  deploy:
    name: Deploy
    needs: build 
    runs-on: ubuntu-latest
    if: | 
      inputs.deploy_site 
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: |
          git checkout ${{ inputs.branch }} 
          git branch 
      - name: Download Dist
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: Depoy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  publish-social:
    needs: [evaluate-changes, deploy]
    runs-on: ubuntu-latest 
    if: needs.evaluate-changes.outputs.new-blogs != '[]'
    strategy: 
      matrix: 
        blog: ${{ fromJson(needs.evaluate-changes.outputs.new-blogs) }}
    steps:
      - name: Notify on Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Checkout my new blog post !!!

            ${{ matrix.blog }}
                    