# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Firebase CI

on:
  push:
    branches: [ "publish" ]

jobs:
  get-new-blogs: 
    runs-on: ubuntu-latest
    outputs: 
      new-blogs: ${{ steps.new-blogs.outputs.newblogs }}
      raw-new-blogs: ${{ steps.new-blogs.outputs.rawnewblogs }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v34
        with:
          files: |
            src/pages/posts/**/*.mdx
      - name: List of new blogs
        id: new-blogs
        run: |
          newblogs=()
          rawnewblogs=()
          for file in ${{ steps.changed-files.outputs.added_files }}; do
            isDraft=$(grep -E '^---$' -A 1000 $file | sed '/^---$/d' | awk '/draft:/ {print $2}')
            echo isDraft: $isDraft
            if [[ "$isDraft" != "true" ]]; then
              rawnewblogs+=($file)
              newblogs+=(https://shubham.codes${file:9:-4})
            fi
          done
          newblogs=$(jq --compact-output --null-input '$ARGS.positional' --args -- "${newblogs[@]}")
          rawnewblogs=$(jq --compact-output --null-input '$ARGS.positional' --args -- "${rawnewblogs[@]}")
          echo "newblogs=${newblogs}"
          echo "rawnewblogs=${rawnewblogs}"
          echo "newblogs=${newblogs}" >> $GITHUB_OUTPUT
          echo "rawnewblogs=${rawnewblogs}" >> $GITHUB_OUTPUT
  build:
    runs-on: ubuntu-latest
    needs: get-new-blogs
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 16
      uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'npm'
    - name: Cache builds
      id: cache-builds
      uses: actions/cache@v3
      with:
        path: dist
        key: ${{ runner.os }}-dist
    - run: npm ci
    - name: Update pubDate
      run: |
        # Add pubDate after ideaDate to blog
        pwd
        ls -a ./src/pages/posts/2023
        exit 3
        for file in ${{ needs.get-new-blogs.outputs.raw-new-blogs }}; do
          sed -i "/^ideaDate:.*/a pubDate: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" ./$file
        done
        git status
    - name: Commit changes to publish branch
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Processed Publish
        branch: publish
        file_pattern: 'src/pages/posts/**/*.mdx'
        commit_user_name: Publish Bot
    - run: npm run build --if-present
    - name: Archive Dist
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download Dist
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: Depoy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  publish-social:
    needs: [get-new-blogs, deploy]
    runs-on: ubuntu-latest 
    if: needs.get-new-blogs.outputs.new-blogs != '[]'
    strategy: 
      matrix: 
        blog: ${{ fromJson(needs.get-new-blogs.outputs.new-blogs) }}
    steps:
      - name: Notify on Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Checkout my new blog post !!!

            ${{ matrix.blog }}
            